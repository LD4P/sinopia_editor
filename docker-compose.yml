version: "3"
services:
  editor:
    build:
      context: .
      args:
        - USE_FIXTURES='false'
    environment:
      INDEX_URL: http://elasticsearch:9200
    ports:
      - 8000:8000
    depends_on:
      - api
  pipeline:
    image: ld4p/sinopia_indexing_pipeline:latest
    # Replace image with build to build from local code. Do not commit docker-compose.yml.
    # build:
    #   context: ../sinopia_indexing_pipeline
    environment:
      INDEX_URL: http://elasticsearch:9200
      MONGODB_HOST: mongo
      API_BASE_URL: http://api:3000
    depends_on:
      - elasticsearch
      - mongo
  elasticsearch:
    image: ld4p/sinopia_elasticsearch:latest
    entrypoint:
      - elasticsearch
      - -Ehttp.port=9200
      - -Ehttp.cors.enabled=true
      - -Ehttp.cors.allow-origin=http://searchui:1358,http://localhost:1358,http://127.0.0.1:1358
      - -Ehttp.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization
      - -Ehttp.cors.allow-credentials=true
      - -Etransport.host=localhost
      - -Ebootstrap.system_call_filter=false
    user: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
  # Uncomment to use Dejavu to monitor Elasticsearch. Do not commit docker-compose.yml.
  # elasticsearch-ui:
  #   image: appbaseio/dejavu:latest
  #   ports:
  #     - 1358:1358
  #   depends_on:
  #     - elasticsearch
  mongo:
    image: mongo:4.4
    ports:
      - 27017:27017
      - 28017:28017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: sekret
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0" ]
  mongo-setup:
    image: ld4p/sinopia_dev_setup:latest
    # Replace image with build to build from local code. Do not commit docker-compose.yml.
    # build:
    #   context: ../sinopia_api
    #   dockerfile: Dockerfile-setup
    depends_on:
      - mongo
  # Uncomment to use Mongo-Express to monitor Mongo. Do not commit docker-compose.yml.
  # mongo-express:
  #   image: mongo-express
  #   ports:
  #     - 8082:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: sekret
  api:
    image: ld4p/sinopia_api:latest
    # Replace image with build to build from local code. Do not commit docker-compose.yml.
    # build:
    #   context: ../sinopia_api
    #   dockerfile: Dockerfile
    ports:
      - 3000:3000
    environment:
      MONGODB_HOST: mongo
      NO_AUTH: "false"
      AWS_ACCESS_KEY_ID: ${DOCKER_AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${DOCKER_AWS_SECRET_ACCESS_KEY}
    depends_on:
      - mongo
